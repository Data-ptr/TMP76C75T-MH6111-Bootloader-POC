0001   0000             ; Run in Mode 2, Multiplexed/RAM/No ROM, P20: L, P21: H, P22: L
0002   0000             ;
0003   0000                                 .msfirst
0004   0000             ;
0005   0000             ;Data Registers
0006   0000             SCI_BAUD            .equ    $0010
0007   0000             ;
0008   0000             ;RAM
0009   0000             RAM_BBU_BOT         .equ    $0040       ;The bottom of "Battery Backup" RAM
0010   0000             RAM_VIO_BOT         .equ    $0057       ;The bottom of "violate" RAM
0011   0000             RAM_VIO_TOP         .equ    $01BF       ;The top of "violate" RAM
0012   0000             ;
0013   0000             ;Subroutines in ROM
0014   0000             PCHAR               .equ    $8054
0015   0000             RCHAR               .equ    $805F
0016   0000             PSTR                .equ    $8068
0017   0000             CLRACC              .equ    $8089
0018   0000             ;
0019   0000             ;Internal ROM
0020   0000             INT_ROM             .equ    $D000
0021   0000             ;
0022   0000             START               .equ    RAM_VIO_BOT
0023   0000             ;
0024   0057                                 .org    START
0025   0057 86 04                           ldaa    #$04       ;baud = E/16, async ;0x07 = baud = E/4096, async
0026   0059 97 10                           staa    SCI_BAUD
0027   005B CE D0 00    DUMP                ldx     #INT_ROM   ;X = start of internal rom
0028   005E A6 00       DUMP1               ldaa    0,x        ;get byte
0029   0060 BD 80 54                        jsr     PCHAR
0030   0063 08                              inx
0031   0064 8C 00 00                        cpx     #$0000     ;Dumps 0xFFFF, then wraps, detect that
0032   0067 26 F5                           bne     DUMP1
0033   0069 39                              rts
0034   006A                                 .end
# tasm: Number of errors = 0
