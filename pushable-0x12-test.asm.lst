0001   0000             ; Run in Mode 2, Multiplexed/RAM/No ROM, P20: L, P21: H, P22: L
0002   0000             ;
0003   0000             ;Current theory 0x12 is 3-bytes STR offset,Y,immediate (indexed by Y)
0004   0000             ;
0005   0000                                 .msfirst
0006   0000             ;
0007   0000             ;RAM
0008   0000             RAM_BBU_BOT         .equ    $0040       ;The bottom of "Battery Backup" RAM
0009   0000             RAM_BBU_TOP         .equ    $0056       ;The top of "Battery Backup" RAM
0010   0000             RAM_VIO_BOT         .equ    $0057       ;The bottom of "violate" RAM
0011   0000             RAM_VIO_TOP         .equ    $01BF       ;The top of "violate" RAM
0012   0000             ;
0013   0000             
0014   0000             ;
0015   0000             ;Subroutines in ROM
0016   0000             PCHAR               .equ    $8054
0017   0000             RCHAR               .equ    $805F
0018   0000             PSTR                .equ    $8068
0019   0000             CLRACC              .equ    $8089
0020   0000             ;
0021   0000             START               .equ    RAM_VIO_BOT
0022   0000             ;
0023   0057                                 .org    START
0024   0057 CE 00 40    CLR_RAM             ldx     #RAM_BBU_BOT
0025   005A 86 55                           ldaa    #$55
0026   005C A7 00       CLR_RAM_LOOP        staa    $00,x
0027   005E 08                              inx
0028   005F 8C 00 56                        cpx     #RAM_BBU_TOP
0029   0062 23 F8                           bls     CLR_RAM_LOOP
0030   0064                                 ;
0031   0064 86 01                           ldaa    #$01         ;marker
0032   0066 BD 80 54                        jsr     PCHAR
0033   0069                                 ;
0034   0069 CD CE 00 00 INST_TEST           ldy     #$0000       ;Using Y as a loop counter
0035   006D CE 00 40                        ldx     #$0040
0036   0070 CC 00 00    TEST_LOOP           ldd     #$0000
0037   0073 CD 08                           iny
0038   0075 12 00 00                        .byte   $12, $00, $00
0039   0078                                 ;
0040   0078 08                              inx
0041   0079                                 ;
0042   0079 CD 8C 00 16                     cpy     #$0016       ;Finish after three loops
0043   007D 25 F1                           bcs     TEST_LOOP
0044   007F                                 ;
0045   007F 86 01                           ldaa    #$01         ;marker
0046   0081 BD 80 54                        jsr     PCHAR
0047   0084                                 ;
0048   0084 CE 00 40    DUMP_MEM            ldx     #RAM_BBU_BOT
0049   0087 A6 00       DUMP_MEM_LOOP       ldaa    $00,x
0050   0089 BD 80 54                        jsr     PCHAR
0051   008C 08                              inx
0052   008D 8C 00 56                        cpx     #RAM_BBU_TOP
0053   0090 23 F5                           bls     DUMP_MEM_LOOP
0054   0092 39                              rts
0055   0093                                 .end
# tasm: Number of errors = 0
