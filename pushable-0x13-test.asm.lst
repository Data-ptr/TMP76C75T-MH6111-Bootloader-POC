0001   0000             ; Run in Mode 2, Multiplexed/RAM/No ROM, P20: L, P21: H, P22: L
0002   0000             ;
0003   0000             ;Current theory 0x13 is 3-bytes ???? offset,B (indexed by B)
0004   0000             ;
0005   0000             ;0x01
0006   0000             ;0xf8 - 1111 1000 ;HIN set ZVC clr ;#$FE
0007   0000             ;0xf1 - 1111 0001 ;HIC set NZV clr ;#$50
0008   0000             ;0xf9 - 1111 1001 ;HINC set ZV clr ;#$00
0009   0000             ;0x01
0010   0000             ;
0011   0000             ;
0012   0000             ;CC   = 0b??HINZVC
0013   0000             ;CPD  = 0b----CCCC -=unchangedC= changed
0014   0000             ;C=1 if the absolute value of the contents of memory is larger than the absolute value of the accumulator; cleared otherwise.
0015   0000             ;V=1 if a twos complement overflow resulted from the operation;
0016   0000             ;Z=1 if result all zero
0017   0000             ;N=1 if MSB of result set
0018   0000             ;
0019   0000                                 .msfirst
0020   0000             ;
0021   0000             ;RAM
0022   0000             RAM_BBU_BOT         .equ    $0040       ;The bottom of "Battery Backup" RAM
0023   0000             RAM_BBU_TOP         .equ    $0056       ;The top of "Battery Backup" RAM
0024   0000             RAM_VIO_BOT         .equ    $0057       ;The bottom of "violate" RAM
0025   0000             RAM_VIO_TOP         .equ    $01BF       ;The top of "violate" RAM
0026   0000             ;
0027   0000             
0028   0000             ;
0029   0000             ;Subroutines in ROM
0030   0000             PCHAR               .equ    $8054
0031   0000             RCHAR               .equ    $805F
0032   0000             PSTR                .equ    $8068
0033   0000             CLRACC              .equ    $8089
0034   0000             ;
0035   0000             START               .equ    RAM_VIO_BOT
0036   0000             ;
0037   0057                                 .org    START
0038   0057 86 01       INIT                ldaa    #$01         ;marker
0039   0059 BD 80 54                        jsr     PCHAR
0040   005C CC FE 50    INST_TEST           ldd     #$FE50       ;set two bytes of RAM
0041   005F DD 40                           std     RAM_BBU_BOT  ;Store
0042   0061 CC 00 00                        ldd     #$0000
0043   0064 CD CE 00 00                     ldy     #$0000       ;Using Y as a loop counter
0044   0068 CE 00 40                        ldx     #RAM_BBU_BOT
0045   006B CD 08       CLR_N_TEST          iny
0046   006D 13 00 40                        .byte   $13, $00, $40
0047   0070 07                              tpa
0048   0071 BD 80 54                        jsr     PCHAR
0049   0074 08                              inx
0050   0075 08                              inx
0051   0076 CD 8C 00 05                     cmpy    #$0005       ;Finish after three loops
0052   007A 25 EF                           bcs     CLR_N_TEST
0053   007C 86 01                           ldaa    #$01         ;marker
0054   007E BD 80 54                        jsr     PCHAR
0055   0081 39                              rts
0056   0082                                 .end
# tasm: Number of errors = 0
